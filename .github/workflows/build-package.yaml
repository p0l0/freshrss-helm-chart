name: build-helm-package
run-name: Build Helm package
on:
  push:
    branches:
      - main
#  push:
#    tags:
#      - "v*.*.*"



# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: "ubuntu-latest"
    outputs:
      release-file: ${{ steps.build-package.outputs.release-file }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Helm
        run: |
          curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
          sudo apt-get install apt-transport-https --yes
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
          sudo apt-get update
          sudo apt-get install -y helm

      - name: Lint Helm Chart
        run: helm lint .

      - name: Build Helm package
        id: build-package
        run: |
          helm package .
          echo "release-file=$(ls -1 freshrss-*.tgz)" >> $GITHUB_OUTPUT
          echo "release-file=$(ls -1 freshrss-*.tgz)" >> $GITHUB_ENV

      - name: Cache package
        uses: actions/cache@v3
        with:
          path: |
            ${{env.GITHUB_WORKSPACE}}/${{env.release-file}}

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Cache package
        uses: actions/cache@v3
        with:
          path: |
            ${{env.GITHUB_WORKSPACE}}/${{needs.build.outputs.release-file}}

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{env.GITHUB_WORKSPACE}}/${{needs.build.outputs.release-file}}

  deploy-chart:
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Helm
        run: |
          curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
          sudo apt-get install apt-transport-https --yes
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
          sudo apt-get update
          sudo apt-get install -y helm

      - name: Cache package
        uses: actions/cache@v3
        with:
          path: |
            ${{env.GITHUB_WORKSPACE}}/${{needs.build.outputs.release-file}}

      - name: Update Helm index.yaml
        run: |
          cp freshrss-*.tgz helm-chart/
          cd helm-chart/
          helm repo index --url http://freshrss-helm.binware.dev/ --merge index.yaml .
      - name: Update Helm index.yaml at github
        run: |
          cd helm-chart/
          git config --global user.name 'p0l0'
          git config --global user.email '1452110+p0l0@users.noreply.github.com'
          git add index.yaml
          # git add ${{needs.build.outputs.release-file}}
          git commit -am "Updated Helm repository for ${{needs.build.outputs.release-file}}"
          git push
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: './helm-chart'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
